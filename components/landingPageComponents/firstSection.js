import Link from "next/link";
import React, { useEffect, useRef, useState } from "react";
import ImagesSlider from "./imagesSlider";

const content = {
	en: {
		tagline: "Trusted Notary Services ‚Äì Fast, Secure, and Always By Your Side.",
		heading: "Certified Notary, Certification, and Translation Services in Nepal",
		description: "Certified professionals delivering seamless notarization‚Äîanytime, anywhere.",
		buttonText: "Checkout our services",
		buttonLink: "/services",
	},
	hi: {
		tagline: "‡§µ‡§ø‡§∂‡•ç‡§µ‡§∏‡§®‡•Ä‡§Ø ‡§®‡•ã‡§ü‡§∞‡•Ä ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç ‚Äì ‡§§‡•á‡§ú, ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§î‡§∞ ‡§π‡§Æ‡•á‡§∂‡§æ ‡§Ü‡§™‡§ï‡•á ‡§∏‡§æ‡§•‡•§",
		heading: "‡§®‡•á‡§™‡§æ‡§≤ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§ø‡§§ ‡§®‡•ã‡§ü‡§∞‡•Ä, ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§® ‡§î‡§∞ ‡§Ö‡§®‡•Å‡§µ‡§æ‡§¶ ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç",
		description: "‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§ø‡§§ ‡§™‡•á‡§∂‡•á‡§µ‡§∞‡•ã‡§Ç ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§®‡§ø‡§∞‡•ç‡§¨‡§æ‡§ß ‡§®‡•ã‡§ü‡§∞‡•Ä‡§ï‡§∞‡§£ ‚Äì ‡§ï‡§≠‡•Ä ‡§≠‡•Ä, ‡§ï‡§π‡•Ä‡§Ç ‡§≠‡•Ä‡•§",
		buttonText: "‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§∏‡•á‡§µ‡§æ‡§è‡§Ç ‡§¶‡•á‡§ñ‡•á‡§Ç",
		buttonLink: "/services",
	},
	ur: {
		tagline: "ŸÇÿßÿ®ŸÑ ÿßÿπÿ™ŸÖÿßÿØ ŸÜŸàŸπÿ±€å ÿÆÿØŸÖÿßÿ™ ‚Äì ÿ™€åÿ≤ÿå ŸÖÿ≠ŸÅŸàÿ∏ÿå ÿßŸàÿ± €ÅŸÖ€åÿ¥€Å ÿ¢Ÿæ ⁄©€í ÿ≥ÿßÿ™⁄æ€î",
		heading: "ŸÜ€åŸæÿßŸÑ ŸÖ€å⁄∫ ŸÖÿµÿØŸÇ€Å ŸÜŸàŸπÿ±€åÿå ÿ™ÿµÿØ€åŸÇÿå ÿßŸàÿ± ÿ™ÿ±ÿ¨ŸÖ€Å ⁄©€å ÿÆÿØŸÖÿßÿ™",
		description: "ŸÖÿµÿØŸÇ€Å Ÿæ€åÿ¥€Å Ÿàÿ± ÿßŸÅÿ±ÿßÿØ ÿ≥€í ÿ¢ÿ≥ÿßŸÜ ŸÜŸàŸπÿ±€å ⁄©€å ÿ≥€ÅŸàŸÑÿ™ ‚Äî ÿ¨ÿ® ⁄Üÿß€Å€å⁄∫ÿå ÿ¨€Åÿß⁄∫ ⁄Üÿß€Å€å⁄∫€î",
		buttonText: "€ÅŸÖÿßÿ±€å ÿÆÿØŸÖÿßÿ™ ÿØ€å⁄©⁄æ€å⁄∫",
		buttonLink: "/services",
	},
	ne: {
		tagline: "‡§≠‡§∞‡§™‡§∞‡•ç‡§¶‡•ã ‡§®‡•ã‡§ü‡§∞‡•Ä ‡§∏‡•á‡§µ‡§æ ‚Äî ‡§õ‡§ø‡§ü‡•ã, ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§, ‡§∞ ‡§∏‡§ß‡•à‡§Ç ‡§§‡§™‡§æ‡§à‡§Ç‡§ï‡•ã ‡§∏‡§æ‡§•‡§Æ‡§æ‡•§",
		heading: "‡§®‡•á‡§™‡§æ‡§≤‡§Æ‡§æ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§ø‡§§ ‡§®‡•ã‡§ü‡§∞‡•Ä, ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡•Ä‡§ï‡§∞‡§£, ‡§∞ ‡§Ö‡§®‡•Å‡§µ‡§æ‡§¶ ‡§∏‡•á‡§µ‡§æ‡§π‡§∞‡•Ç",
		description: "‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§ø‡§§ ‡§™‡•á‡§∂‡•á‡§µ‡§∞‡§π‡§∞‡•Ç‡§¨‡§æ‡§ü ‡§∏‡§π‡§ú ‡§®‡•ã‡§ü‡§∞‡•Ä‡§ï‡§∞‡§£ ‡§∏‡•á‡§µ‡§æ ‚Äî ‡§ú‡§¨‡§∏‡•Å‡§ï‡•à, ‡§ú‡§π‡§æ‡§Å‡§∏‡•Å‡§ï‡•à‡•§",
		buttonText: "‡§π‡§æ‡§Æ‡•ç‡§∞‡§æ ‡§∏‡•á‡§µ‡§æ‡§π‡§∞‡•Ç ‡§π‡•á‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç",
		buttonLink: "/services",
	},
};

export default function FirstSection() {
	const OnloadAnimationElements = useRef([]);
	OnloadAnimationElements.current = [];

	const [language, setLanguage] = useState("en"); // Default to English

	const setRef = (el) => {
		if (el && !OnloadAnimationElements.current.includes(el)) {
			OnloadAnimationElements.current.push(el);
		}
	};

	// üåê Detect <html lang=""> instead of browser setting
	useEffect(() => {
		if (typeof document !== "undefined") {
			const htmlLang = document.documentElement.lang?.split("-")[0] || "en";
			if (Object.keys(content).includes(htmlLang)) {
				setLanguage(htmlLang);
			}
		}
	}, []);

	useEffect(() => {
		setTimeout(() => {
			OnloadAnimationElements.current.forEach((elem, index) => {
				const delay = index * 100;
				elem.style.transitionDelay = `${delay}ms`;
				elem.style.opacity = 1;
				elem.style.transform = "translateX(0) translateY(0) scale(1) rotate(0deg)";
			});
		}, 10);
	}, []);

	const t = content[language];

	return (
		<div className="relative h-auto xl:px-32 lg:px-32 md:px-16 sm:px-8 px-4 flex items-center gap-8 xl:*:w-1/2 lg:*:w-1/2 xl:flex-nowrap lg:flex-nowrap flex-wrap-reverse *:w-full">
			<div className="relative flex items-center">
				<div className="relative">
					<div
						className="relative flex transition-all duration-500 ease-out"
						style={{ transform: "translateX(30px)", opacity: 0 }}
						ref={setRef}
					>
						<div className="relative text-sm bg-purple-200 p-1">{t.tagline}</div>
					</div>
					<div
						className="text-4xl font-bold mt-2 leading-12 font-sans tracking-wide transition-all duration-500 ease-out"
						style={{ transform: "translateX(30px)", opacity: 0 }}
						ref={setRef}
					>
						{t.heading}
					</div>
					<div
						className="relative mt-4 transition-all duration-500 ease-out"
						style={{ transform: "translateX(30px)", opacity: 0 }}
						ref={setRef}
					>
						<div className="relative max-w-md tracking-wide">{t.description}</div>
					</div>
					<div
						className="relative flex mt-4 transition-all duration-500 ease-out"
						style={{ transform: "translateX(30px)", opacity: 0 }}
						ref={setRef}
					>
						<Link href={t.buttonLink}>
							<div className="relative text-sm text-white bg-purple-600 font-bold rounded-md shadow-xl shadow-gray-200 cursor-pointer flex items-center justify-center px-8 h-10 gap-2">
								{t.buttonText}
							</div>
						</Link>
					</div>
				</div>
			</div>

			<div className="relative h-[80vh]">
				<ImagesSlider />
			</div>
		</div>
	);
}
